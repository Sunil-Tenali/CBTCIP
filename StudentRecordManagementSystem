//Sunil Varma Tenali


#include <iostream>
#include <fstream>
#include <string>
#include<iomanip>
using namespace std;

class Student {
public:
	int roll_no;
	string name;
	float cgpa;

	void InputDetails() {
		cout << "\nEnter Students Roll Number : ";
		cin >> roll_no;
		cout << "Enter the name of the student : ";
		cin.ignore();
		getline(cin, name);
		cout << "Enter students's CGPA : " ;
		cin >> cgpa;
	}

	void DisplayDetails() {
		static bool headline = false;
		if (!(headline)) {
			cout << "\t\tStudent Details" << endl;
			cout << left << setw(15) << "Roll Number" << setw(30) << "Name" << setw(10) << "CGPA" << endl;
			headline = true;
		}
		else {
			cout << left << setw(15) << roll_no << setw(30) << name << setw(10) << cgpa << endl;

		}
	}
	void Updatedetais() {
		cout << "Enter New Name : ";
		cin.ignore();
		getline(cin, name);
		cout << "\nEnter the new CGPA : " << endl;
		cin >> cgpa;
	}
};



void AddStudent(fstream& file) {

	Student student;
	student.InputDetails();
	file.write(reinterpret_cast<char*>(&student), sizeof(student));
}

void DisplayStudentDetails(fstream& file) {

	Student student;
	file.read(reinterpret_cast<char*>(&student), sizeof(student));
	if (file.eof()) {
		cout << "Record is empty Add students to record" << endl;
	}
	while (!(file.eof())) {
		student.DisplayDetails();
		file.read(reinterpret_cast<char*>(&student), sizeof(student));
	}
	

}

void UpdateStudentDetails(fstream& file) {

	int roll_no;
	cout << "Enter the Roll Number of the student : ";
	cin >> roll_no;

	fstream tempfile("temp.dat", ios::in | ios::out | ios::binary);

	if (tempfile.is_open()) {
		cout << "\nERROR : The temperory file cannot be opened" << endl;
		return;
	}
	Student student;
	bool found = false;

	file.read(reinterpret_cast<char*>(&student), sizeof(student));

	while (!(file.eof())) {

		if (student.roll_no == roll_no) {
			student.Updatedetais();
			found = true;
		}
		tempfile.write(reinterpret_cast<char*>(&student), sizeof(student));
		file.read(reinterpret_cast<char*>(&student), sizeof(student));
	}

	tempfile.close();
	file.close();

	if (found) {
		remove("student.dat");
		rename("temp.dat", "student.dat");
		cout << "\nStudent with Roll Number : " << roll_no << " record updated succesfully" << endl;
	}
	else {
		cout << "\nStudent with Roll Number : " << roll_no << " is not found" << endl;
		remove("temp.dat");
	}
}

void DeleteFile(fstream& file) {

	int roll_no;
	cout << "\nEnter the Roll Number of the student : ";
	cin >> roll_no;

	fstream tempfile("temp.dat", ios::in | ios::out | ios::binary);

	if (tempfile.is_open()) {
		cout << "\nERROR : The temperory file cannot be opened" << endl;
		return;
	}
	Student student;
	bool found = false;

	file.read(reinterpret_cast<char*>(&student), sizeof(student));

	while (!(file.eof())) {
		if (student.roll_no != roll_no) {
			tempfile.write(reinterpret_cast<char*>(&student), sizeof(student));
		}
		else {
			found = true;
		}
		file.read(reinterpret_cast<char*>(&student), sizeof(student));
	}

	tempfile.close();
	file.close();

	if (found) {
		remove("student.dat");
		rename("temp.dat", "student.dat");
		cout << "\nStudent with Roll Number : " << roll_no << " record deleted succesfully" << endl;
	}
	else {
		cout << "\nStudent with Roll Number : " << roll_no << " is not found" << endl;
		remove("temp.dat");
	}
}
int main()
{
	int choice = 0;
	while (choice != 6) {
		cout << "\nMenu " << endl << endl;
		cout << "1. Add Student" << endl;
		cout << "2. Display student records " << endl;
		cout << "3. Update student record " << endl;
		cout << "4. Delete a Student Record " << endl;
		cout << "5.exit" << endl << endl;

		cout << "Enter the option of choice from Menu : ";
		cin >> choice;

		fstream file;

		switch (choice)
		{
		case 1:
			file.open("student.dat", ios::app | ios::binary);
			if (file.is_open()) {
				AddStudent(file);
				file.close();
			}
			else {
				cout << "ERROR : Cannot open file " << endl;
			}
			break;
		case 2:
			file.open("student.dat", ios::in | ios::binary);
			if (file.is_open()) {
				DisplayStudentDetails(file);
				file.close();
			}
			else {
				cout << "ERROR : Cannot open file " << endl;
			}
			break;

		case 3:
			file.open("student.dat", ios::in | ios::binary);
			if (file.is_open()) {
				UpdateStudentDetails(file);
				file.close();
			}
			else {
				cout << "ERROR : Cannot open file " << endl;
			}
			break;

		case 4:
			file.open("student.dat", ios::in | ios::binary);
			if (file.is_open()) {
				DeleteFile(file);
				file.close();
			}
			else {
				cout << "ERROR : Cannot open file " << endl;
			}
			break;
		case 5:
			cout << "\nExiting from the service....." << endl;
			return 1;
			break;
		default:
			cout << "Invalid choice !!" << endl;
			break;

		}
	}

	return 0;
}
